{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justm\\\\Documents\\\\search-bar\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Fruits from './Fruits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const search = data => {\n    return Fruits.filter(fruit => fruit.name.toLowerCase().includes(query) || fruit.name.toUpperCase().includes(query));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"iFruits - search fruits images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"write your fruit's name here...\",\n      type: \"text\",\n      className: \"search\",\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Fruits.filter(fruit => fruit.name.includes(query)).map(fruit => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"listItem\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fruit.img,\n              alt: fruit.name,\n              width: \"300px\",\n              data: search(Fruits)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, fruit.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Fruits","App","query","setQuery","search","data","filter","fruit","name","toLowerCase","includes","toUpperCase","e","target","value","map","img","id"],"sources":["C:/Users/justm/Documents/search-bar/src/App.js"],"sourcesContent":["import React,{ useState } from 'react';\nimport './App.css';\nimport Fruits from './Fruits';\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n\n  const search = (data)=>{\n    return Fruits.filter(fruit=>fruit.name.toLowerCase().includes(query) || fruit.name.toUpperCase().includes(query));\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='title-div'>\n        <h1 className='title'>iFruits - search fruits images</h1>\n      </div>\n      <input placeholder=\"write your fruit's name here...\" type='text' className='search' onChange={(e)=> setQuery(e.target.value)} />\n\n      <ul>\n      {Fruits.filter(fruit=>fruit.name.includes(query)).map((fruit)=>{\n        return(\n          <>\n            <li className='listItem' key={fruit.id}>\n              <img src={fruit.img} alt={fruit.name} width='300px' data={search(Fruits)} />\n            </li>\n          </>\n          )\n        })}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAE9B,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMK,MAAM,GAAIC,IAAI,IAAG;IACrB,OAAOL,MAAM,CAACM,MAAM,CAACC,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,KAAK,CAAC,IAAIK,KAAK,CAACC,IAAI,CAACG,WAAW,EAAE,CAACD,QAAQ,CAACR,KAAK,CAAC,CAAC;EACnH,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAI,SAAS,EAAC,OAAO;QAAA,UAAC;MAA8B;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACrD,eACN;MAAO,WAAW,EAAC,iCAAiC;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,QAAQ;MAAC,QAAQ,EAAGU,CAAC,IAAIT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAEhI;MAAA,UACCd,MAAM,CAACM,MAAM,CAACC,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACE,QAAQ,CAACR,KAAK,CAAC,CAAC,CAACa,GAAG,CAAER,KAAK,IAAG;QAC7D,oBACE;UAAA,uBACE;YAAI,SAAS,EAAC,UAAU;YAAA,uBACtB;cAAK,GAAG,EAAEA,KAAK,CAACS,GAAI;cAAC,GAAG,EAAET,KAAK,CAACC,IAAK;cAAC,KAAK,EAAC,OAAO;cAAC,IAAI,EAAEJ,MAAM,CAACJ,MAAM;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG,GADhDO,KAAK,CAACU,EAAE;YAAA;YAAA;YAAA;UAAA;QAEjC,iBACJ;MAEL,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAEV;AAAC,GA5BQhB,GAAG;AAAA,KAAHA,GAAG;AA8BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}